import pytest
import requests
import logging
from requests.auth import HTTPBasicAuth

BASE_URL = "http://127.0.0.1:8080"

@pytest.fixture(scope="class")
def session():
    s = requests.Session()
    auth_url = f"{BASE_URL}/auth"
    auth = HTTPBasicAuth("test_user", "test_pass")

    logging.info("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ /auth")
    response = s.post(auth_url, auth=auth)
    assert response.status_code == 200, "‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è"

    token = response.json().get("access_token")
    assert token, "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ"

    s.headers.update({"Authorization": f"Bearer {token}"})
    logging.info("‚úÖ –¢–æ–∫–µ–Ω –¥–æ–¥–∞–Ω–æ –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤")
    return s

@pytest.mark.parametrize("sort_by,limit", [
    ("price", 3),
    ("year", 5),
    ("engine_volume", 2),
    ("brand", 4),
    ("price", 10),
    ("year", 1),
    ("engine_volume", 7),
])
def test_search_cars(session, sort_by, limit):
    url = f"{BASE_URL}/cars"
    params = {"sort_by": sort_by, "limit": limit}

    logging.info(f"üì¶ –ó–∞–ø–∏—Ç: sort_by={sort_by}, limit={limit}")
    response = session.get(url, params=params)

    assert response.status_code == 200, f"‚ùå –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}"
    cars = response.json()
    logging.info(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(cars)} –∑–∞–ø–∏—Å—ñ–≤")

    assert isinstance(cars, list), "‚ùå –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ —î —Å–ø–∏—Å–∫–æ–º"
    assert len(cars) <= limit, f"‚ùå –û—Ç—Ä–∏–º–∞–Ω–æ –±—ñ–ª—å—à–µ –∑–∞–ø–∏—Å—ñ–≤, –Ω—ñ–∂ –æ—á—ñ–∫—É–≤–∞–ª–æ—Å—å: {len(cars)} > {limit}"

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    values = [car[sort_by] for car in cars]
    assert values == sorted(values), f"‚ùå –î–∞–Ω—ñ –Ω–µ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –ø–æ '{sort_by}'"
