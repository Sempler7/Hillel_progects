from datetime import datetime
import re
import os

def analyze_heartbeat(log_file_path, output_file_path, target_key="Key TSTFEED0300|7E3E|0400"):
    pattern = re.compile(r"Timestamp (\d{2}:\d{2}:\d{2})")

    filtered_lines = []
    timestamps = []

    # 1. –ß–∏—Ç–∞—î–º–æ —Ñ–∞–π–ª —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ –∫–ª—é—á—É
    with open(log_file_path, "r") as f:
        for line in f:
            if target_key in line:
                match = pattern.search(line)
                if match:
                    time_obj = datetime.strptime(match.group(1), "%H:%M:%S")
                    timestamps.append(time_obj)

    # 2. –ê–Ω–∞–ª—ñ–∑—É—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ heartbeat
    log_entries = []

    for i in range(len(timestamps) - 1):
        delta = abs((timestamps[i] - timestamps[i + 1]).total_seconds())

        if 31 < delta < 33:
            log_entries.append(f"[{timestamps[i].strftime('%H:%M:%S')}] WARNING: Heartbeat interval = {int(delta)}s")
        elif delta >= 33:
            log_entries.append(f"[{timestamps[i].strftime('%H:%M:%S')}] ERROR: Heartbeat interval = {int(delta)}s")

    # 3. –ó–∞–ø–∏—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —É —Ñ–∞–π–ª
    with open(output_file_path, "w") as out_file:
        for entry in log_entries:
            out_file.write(entry + "\n")

    # 4. –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
    print(f"‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–∞–ø–∏—Å–∞–Ω—ñ —É —Ñ–∞–π–ª: {output_file_path}")
    print(f"üìÅ –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É: {os.path.abspath(output_file_path)}")
    if not log_entries:
        print("‚ÑπÔ∏è –£—Å—ñ heartbeat —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ –≤ –Ω–æ—Ä–º—ñ (‚â§ 31 —Å–µ–∫)")

# –ó–∞–ø—É—Å–∫ —è–∫—â–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É
if __name__ == "__main__":
    analyze_heartbeat("hblog.txt", "hb_test.log")
