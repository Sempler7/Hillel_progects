{"name": "test_create_student", "status": "broken", "statusDetails": {"message": "TypeError: 'age' is an invalid keyword argument for Student", "trace": "@allure.feature(\"Student Management\")\n    def test_create_student():\n        with allure.step(\"Create a new student\"):\n>           student = Student(name=\"Vitalii\", age=30)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nallure_test.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n<string>:4: in __init__\n    ???\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\state.py:571: in _initialize_instance\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\state.py:569: in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <students_system.Student object at 0x0000025E4C51E750>, kwargs = {'age': 30, 'name': 'Vitalii'}, cls_ = <class 'students_system.Student'>, k = 'age'\n\n    def _declarative_constructor(self: Any, **kwargs: Any) -> None:\n        \"\"\"A simple constructor that allows initialization from kwargs.\n    \n        Sets attributes on the constructed instance using the names and\n        values in ``kwargs``.\n    \n        Only keys that are present as\n        attributes of the instance's class are allowed. These could be,\n        for example, any mapped columns or relationships.\n        \"\"\"\n        cls_ = type(self)\n        for k in kwargs:\n            if not hasattr(cls_, k):\n>               raise TypeError(\n                    \"%r is an invalid keyword argument for %s\" % (k, cls_.__name__)\n                )\nE               TypeError: 'age' is an invalid keyword argument for Student\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\decl_base.py:2179: TypeError"}, "steps": [{"name": "Create a new student", "status": "broken", "statusDetails": {"message": "TypeError: 'age' is an invalid keyword argument for Student\n", "trace": "  File \"C:\\Users\\ASUS\\Hillel_progects\\lesson_30\\allure_test.py\", line 14, in test_create_student\n    student = Student(name=\"Vitalii\", age=30)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 4, in __init__\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 571, in _initialize_instance\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 569, in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 2179, in _declarative_constructor\n    raise TypeError(\n"}, "start": 1756718254004, "stop": 1756718254009}], "start": 1756718254004, "stop": 1756718254014, "uuid": "ce3ac86e-ebb5-4401-a5e8-c9f6e829c542", "historyId": "016345b27b6f78adaaab857508006462", "testCaseId": "016345b27b6f78adaaab857508006462", "fullName": "allure_test#test_create_student", "labels": [{"name": "feature", "value": "Student Management"}, {"name": "suite", "value": "allure_test"}, {"name": "host", "value": "Sempler"}, {"name": "thread", "value": "18748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "allure_test"}], "titlePath": ["allure_test.py"]}